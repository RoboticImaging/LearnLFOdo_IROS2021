# This script plots the trajectories generated by the different methods
#
# Author and Maintainer: Tejaswi Digumarti (tejaswi.digumarti@sydney.edu.au)

import numpy as np
import matplotlib.pyplot as plt
import utils

# Input: Estimated Poses in a Text File with the format x y z rx ry rz

def rel_to_abs(poses):
    poses_abs = np.zeros((poses.shape[0]+1, poses.shape[1]), dtype=np.float)

    poses_abs[0,:] = np.zeros((1,6))

    prev_tr = np.eye(4)

    for i in range(poses.shape[0]):
        t = poses[i,0:3].reshape(1,3)

        # for each pose
        rotm = utils.euler_to_rotm(poses[i, 3], poses[i, 4], poses[i, 5])
        tr = np.concatenate((rotm, np.transpose(t)), axis=1)
        tr = np.concatenate((tr, np.zeros((1, 4))), axis=0)
        tr[3, 3] = 1

        prev_tr = np.dot(tr, prev_tr)

        poses_abs[i+1,0:3] = prev_tr[0:3,3].transpose()
        poses_abs[i+1, 3:] = utils.rotm_to_euler(prev_tr[0:3, 0:3])

    return poses_abs


pose_est = np.loadtxt("/home/dtejaswi/Desktop/joseph_daniel/ral/multiwarp-5/epi/results/16/poses.npy")
pose_rel_gt = np.load("/home/dtejaswi/Documents/Projects/student_projects/joseph_daniel/data/module-1-1/module1-1-png/seq16/poses_gt_relative.npy")
pose_abs_gt = np.load("/home/dtejaswi/Documents/Projects/student_projects/joseph_daniel/data/module-1-1/module1-1-png/seq16/poses_gt_absolute.npy")

# Absolute Instantataneous Error
err = (pose_est - pose_rel_gt[1:])

# Generating Result Figure 5.1 and Figure 5.4
plt.figure()
plt.hist(err[:,0])
plt.figure()
plt.hist(err[:,1])
plt.figure()
plt.hist(err[:,2])
plt.figure()
plt.hist(err[:,3])
plt.figure()
plt.hist(err[:,4])
plt.figure()
plt.hist(err[:,5])

# Generating Result Figure 5.2, Figure 5.3, Figure 5.5, and Figure 5.6
from mpl_toolkits.mplot3d import Axes3D
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
# ax.plot3D(pose_rel_gt[:,0], pose_rel_gt[:,1], pose_rel_gt[:,2], 'r')
# ax.plot3D(pose_est[:,0], pose_est[:,1], pose_est[:,2], 'b')
# ax.plot3D(pose_abs_gt[:,0], pose_abs_gt[:,1], pose_abs_gt[:,2], 'g')

ppp = rel_to_abs(pose_rel_gt)
pp = rel_to_abs(pose_est)
ax.plot3D(ppp[:,0], ppp[:,1], ppp[:,2], 'k')
ax.plot3D(pp[:,0], pp[:,1], pp[:,2], 'm')
plt.show()


